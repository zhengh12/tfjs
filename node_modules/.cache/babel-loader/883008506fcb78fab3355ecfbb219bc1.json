{"remainingRequest":"C:\\Users\\1\\Desktop\\tensorflowjs\\face-api-demo-vue-master\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\1\\Desktop\\tensorflowjs\\face-api-demo-vue-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\1\\Desktop\\tensorflowjs\\face-api-demo-vue-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\1\\Desktop\\tensorflowjs\\face-api-demo-vue-master\\src\\views\\VideoMediaStream.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\1\\Desktop\\tensorflowjs\\face-api-demo-vue-master\\src\\views\\VideoMediaStream.vue","mtime":1558766770000},{"path":"C:\\Users\\1\\Desktop\\tensorflowjs\\face-api-demo-vue-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\1\\Desktop\\tensorflowjs\\face-api-demo-vue-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\1\\Desktop\\tensorflowjs\\face-api-demo-vue-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\1\\Desktop\\tensorflowjs\\face-api-demo-vue-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _typeof from \"C:\\\\Users\\\\1\\\\Desktop\\\\tensorflowjs\\\\face-api-demo-vue-master\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/typeof\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"VideoMediaStream\",\n  data: function data() {\n    return {\n      videoDom: \"\",\n      facingMode: false,\n      userMediaConstraints: {\n        audio: false,\n        video: {\n          // ideal（应用最理想的）\n          width: {\n            min: 320,\n            ideal: 1280,\n            max: 1920\n          },\n          height: {\n            min: 240,\n            ideal: 720,\n            max: 1080\n          },\n          // frameRate受限带宽传输时，低帧率可能更适宜\n          frameRate: {\n            min: 15,\n            ideal: 30,\n            max: 60\n          },\n          facingMode: this.facingMode ? \"user\" : \"environment\"\n        }\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.videoDom = this.$refs.video; // 启动摄像头视频媒体\n\n    navigator.mediaDevices.getUserMedia(this.userMediaConstraints).then(this.getMediaStreamSuccess).catch(this.getMediaStreamError);\n  },\n  methods: {\n    // 视频媒体流\n    getMediaStreamSuccess: function getMediaStreamSuccess(stream) {\n      window.stream = stream; // make stream available to browser console\n\n      this.videoDom.srcObject = stream;\n    },\n    getMediaStreamError: function getMediaStreamError(error) {\n      alert(\"视频媒体流获取错误\" + error);\n    },\n    // 结束媒体流\n    stopMediaStreamTrack: function stopMediaStreamTrack() {\n      if (_typeof(window.stream) === \"object\") {\n        this.videoDom.srcObject = null;\n        window.stream.getTracks().forEach(function (track) {\n          return track.stop();\n        });\n      }\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.stopMediaStreamTrack();\n  }\n};",{"version":3,"sources":["VideoMediaStream.vue"],"names":[],"mappings":";;;;;;;;;;;;AAWA,eAAA;AACA,EAAA,IAAA,EAAA,kBADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,EADA;AAEA,MAAA,UAAA,EAAA,KAFA;AAGA,MAAA,oBAAA,EAAA;AACA,QAAA,KAAA,EAAA,KADA;AAEA,QAAA,KAAA,EAAA;AACA;AACA,UAAA,KAAA,EAAA;AACA,YAAA,GAAA,EAAA,GADA;AAEA,YAAA,KAAA,EAAA,IAFA;AAGA,YAAA,GAAA,EAAA;AAHA,WAFA;AAOA,UAAA,MAAA,EAAA;AACA,YAAA,GAAA,EAAA,GADA;AAEA,YAAA,KAAA,EAAA,GAFA;AAGA,YAAA,GAAA,EAAA;AAHA,WAPA;AAYA;AACA,UAAA,SAAA,EAAA;AACA,YAAA,GAAA,EAAA,EADA;AAEA,YAAA,KAAA,EAAA,EAFA;AAGA,YAAA,GAAA,EAAA;AAHA,WAbA;AAkBA,UAAA,UAAA,EAAA,KAAA,UAAA,GAAA,MAAA,GAAA;AAlBA;AAFA;AAHA,KAAA;AA2BA,GA9BA;AA+BA,EAAA,OA/BA,qBA+BA;AACA,SAAA,QAAA,GAAA,KAAA,KAAA,CAAA,KAAA,CADA,CAEA;;AACA,IAAA,SAAA,CAAA,YAAA,CACA,YADA,CACA,KAAA,oBADA,EAEA,IAFA,CAEA,KAAA,qBAFA,EAGA,KAHA,CAGA,KAAA,mBAHA;AAIA,GAtCA;AAuCA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,qBAFA,iCAEA,MAFA,EAEA;AACA,MAAA,MAAA,CAAA,MAAA,GAAA,MAAA,CADA,CACA;;AACA,WAAA,QAAA,CAAA,SAAA,GAAA,MAAA;AACA,KALA;AAMA,IAAA,mBANA,+BAMA,KANA,EAMA;AACA,MAAA,KAAA,CAAA,cAAA,KAAA,CAAA;AACA,KARA;AASA;AACA,IAAA,oBAVA,kCAUA;AACA,UAAA,QAAA,MAAA,CAAA,MAAA,MAAA,QAAA,EAAA;AACA,aAAA,QAAA,CAAA,SAAA,GAAA,IAAA;AACA,QAAA,MAAA,CAAA,MAAA,CAAA,SAAA,GAAA,OAAA,CAAA,UAAA,KAAA;AAAA,iBAAA,KAAA,CAAA,IAAA,EAAA;AAAA,SAAA;AACA;AACA;AAfA,GAvCA;AAwDA,EAAA,aAxDA,2BAwDA;AACA,SAAA,oBAAA;AACA;AA1DA,CAAA","sourcesContent":["<template>\n  <video\n    class=\"videoStyle\"\n    poster=\"https://ss0.bdstatic.com/94oJfD_bAAcT8t7mm9GUKT-xh_/timg?image&quality=100&size=b4000_4000&sec=1558759758&di=ccd0b08f63f2b6ea3ca08b651c4fa5f1&src=http://b-ssl.duitang.com/uploads/item/201610/05/20161005105402_xiLsK.thumb.700_0.jpeg\"\n    ref=\"video\"\n    playsinline\n    autoplay\n  ></video>\n</template>\n\n<script>\nexport default {\n  name: \"VideoMediaStream\",\n  data() {\n    return {\n      videoDom: \"\",\n      facingMode: false,\n      userMediaConstraints: {\n        audio: false,\n        video: {\n          // ideal（应用最理想的）\n          width: {\n            min: 320,\n            ideal: 1280,\n            max: 1920\n          },\n          height: {\n            min: 240,\n            ideal: 720,\n            max: 1080\n          },\n          // frameRate受限带宽传输时，低帧率可能更适宜\n          frameRate: {\n            min: 15,\n            ideal: 30,\n            max: 60\n          },\n          facingMode: this.facingMode ? \"user\" : \"environment\"\n        }\n      }\n    };\n  },\n  mounted() {\n    this.videoDom = this.$refs.video;\n    // 启动摄像头视频媒体\n    navigator.mediaDevices\n      .getUserMedia(this.userMediaConstraints)\n      .then(this.getMediaStreamSuccess)\n      .catch(this.getMediaStreamError);\n  },\n  methods: {\n    // 视频媒体流\n    getMediaStreamSuccess(stream) {\n      window.stream = stream; // make stream available to browser console\n      this.videoDom.srcObject = stream;\n    },\n    getMediaStreamError(error) {\n      alert(\"视频媒体流获取错误\" + error);\n    },\n    // 结束媒体流\n    stopMediaStreamTrack() {\n      if (typeof window.stream === \"object\") {\n        this.videoDom.srcObject = null;\n        window.stream.getTracks().forEach(track => track.stop());\n      }\n    }\n  },\n  beforeDestroy() {\n    this.stopMediaStreamTrack();\n  }\n};\n</script>\n\n<style scoped>\n.videoStyle {\n  max-height: 860px;\n  height: 100%;\n  width: 100%;\n  display: block;\n  background-color: #242424;\n}\n</style>\n"],"sourceRoot":"src/views"}]}