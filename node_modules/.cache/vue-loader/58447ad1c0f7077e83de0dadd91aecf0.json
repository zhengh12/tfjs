{"remainingRequest":"C:\\Users\\1\\Desktop\\tensorflowjs\\face-api-demo-vue-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\1\\Desktop\\tensorflowjs\\face-api-demo-vue-master\\src\\views\\VideoMediaStream.vue?vue&type=style&index=0&id=e90a467a&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\1\\Desktop\\tensorflowjs\\face-api-demo-vue-master\\src\\views\\VideoMediaStream.vue","mtime":1558766770000},{"path":"C:\\Users\\1\\Desktop\\tensorflowjs\\face-api-demo-vue-master\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\1\\Desktop\\tensorflowjs\\face-api-demo-vue-master\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\1\\Desktop\\tensorflowjs\\face-api-demo-vue-master\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\1\\Desktop\\tensorflowjs\\face-api-demo-vue-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\1\\Desktop\\tensorflowjs\\face-api-demo-vue-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.videoStyle {\n  max-height: 860px;\n  height: 100%;\n  width: 100%;\n  display: block;\n  background-color: #242424;\n}\n",{"version":3,"sources":["VideoMediaStream.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VideoMediaStream.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <video\n    class=\"videoStyle\"\n    poster=\"https://ss0.bdstatic.com/94oJfD_bAAcT8t7mm9GUKT-xh_/timg?image&quality=100&size=b4000_4000&sec=1558759758&di=ccd0b08f63f2b6ea3ca08b651c4fa5f1&src=http://b-ssl.duitang.com/uploads/item/201610/05/20161005105402_xiLsK.thumb.700_0.jpeg\"\n    ref=\"video\"\n    playsinline\n    autoplay\n  ></video>\n</template>\n\n<script>\nexport default {\n  name: \"VideoMediaStream\",\n  data() {\n    return {\n      videoDom: \"\",\n      facingMode: false,\n      userMediaConstraints: {\n        audio: false,\n        video: {\n          // ideal（应用最理想的）\n          width: {\n            min: 320,\n            ideal: 1280,\n            max: 1920\n          },\n          height: {\n            min: 240,\n            ideal: 720,\n            max: 1080\n          },\n          // frameRate受限带宽传输时，低帧率可能更适宜\n          frameRate: {\n            min: 15,\n            ideal: 30,\n            max: 60\n          },\n          facingMode: this.facingMode ? \"user\" : \"environment\"\n        }\n      }\n    };\n  },\n  mounted() {\n    this.videoDom = this.$refs.video;\n    // 启动摄像头视频媒体\n    navigator.mediaDevices\n      .getUserMedia(this.userMediaConstraints)\n      .then(this.getMediaStreamSuccess)\n      .catch(this.getMediaStreamError);\n  },\n  methods: {\n    // 视频媒体流\n    getMediaStreamSuccess(stream) {\n      window.stream = stream; // make stream available to browser console\n      this.videoDom.srcObject = stream;\n    },\n    getMediaStreamError(error) {\n      alert(\"视频媒体流获取错误\" + error);\n    },\n    // 结束媒体流\n    stopMediaStreamTrack() {\n      if (typeof window.stream === \"object\") {\n        this.videoDom.srcObject = null;\n        window.stream.getTracks().forEach(track => track.stop());\n      }\n    }\n  },\n  beforeDestroy() {\n    this.stopMediaStreamTrack();\n  }\n};\n</script>\n\n<style scoped>\n.videoStyle {\n  max-height: 860px;\n  height: 100%;\n  width: 100%;\n  display: block;\n  background-color: #242424;\n}\n</style>\n"]}]}