{"remainingRequest":"C:\\Users\\1\\Desktop\\tensorflowjs\\face-api-demo-vue-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\1\\Desktop\\tensorflowjs\\face-api-demo-vue-master\\src\\views\\FaceComparison.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\1\\Desktop\\tensorflowjs\\face-api-demo-vue-master\\src\\views\\FaceComparison.vue","mtime":1574153528647},{"path":"C:\\Users\\1\\Desktop\\tensorflowjs\\face-api-demo-vue-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\1\\Desktop\\tensorflowjs\\face-api-demo-vue-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\1\\Desktop\\tensorflowjs\\face-api-demo-vue-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\1\\Desktop\\tensorflowjs\\face-api-demo-vue-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as faceapi from \"face-api.js\";\nimport * as tf from \"@tensorflow/tfjs\"\nimport * as bbt from \"../utils/bbt.js\"\nimport * as imageSelectionControls from \"../utils/imageSelectionControls\"\nimport * as faceDetectionControls from \"../utils/faceDetectionControls\"\nimport * as commons from \"../utils/commons\"\nimport * as faceComparison from \"../utils/faceComparison\"\nimport * as cnntfjs from \"../utils/cnntfjs\"\nimport * as mtcnnLoad from \"../utils/mtcnnLoad\"\nimport TS1 from \"../assets/images/bernadette/bernadette1.png\"\nimport TS2 from \"../assets/images/howard/howard1.png\"\nimport jsonModel from \"../assets/model/minist-2019_11_19 上午9_57_57.json\"\n\nexport default {\n  name: \"FaceComparison\",\n  data() {\n    return {\n      // 差值\n      threshold: 0.6,\n      descriptors: {\n        desc1: null,\n        desc2: null\n      },\n      faceMatcher: null\n    };\n  },\n  mounted() {\n    // 同步执行避免报错\n    this.init();\n  },\n  methods: {\n    // 初始加载数据模型\n    async init() {\n      await cnntfjs.train()\n      console.log(jsonModel)\n      let model = await mtcnnLoad.loadLayersModel(jsonModel)\n      model.summary()\n      //model.loadWeights(\"https://storage.googleapis.com/tfjs-models/savedmodel/ssd_mobilenet_v1/weights_manifest.json\")\n      model.predict(tf.zeros([1, 224, 224, 3])).print()\n      imageSelectionControls.initImageSelectionControls()\n      faceDetectionControls.initFaceDetectionControls()\n      // await faceapi.loadFaceDetectionModel(\"/models\")\n      // await faceapi.loadFaceLandmarkModel(\"/models\")\n      // await faceapi.loadFaceRecognitionModel(\"/models\")\n      await faceDetectionControls.changeFaceDetector('ssd_mobilenetv1')\n      await faceapi.loadFaceRecognitionModel(\"/models\")\n      await faceapi.loadFaceLandmarkModel(\"/models\")\n      await this.run()\n    },\n    async updateResults() {\n      if (!faceDetectionControls.isFaceDetectionModelLoaded()) {\n        console.log(\"222\")\n        return\n      }\n\n      const inputImgEl = $('#inputImg').get(0)\n      console.log(inputImgEl)\n      const options = faceDetectionControls.getFaceDetectorOptions()\n      \n      //提取所有面孔并计算结果\n      const results = await faceapi\n        .detectAllFaces(inputImgEl, options)//class DetectAllFacesTask\n        .withFaceLandmarks()//class DetectAllFaceLandmarksTask\n        .withFaceDescriptors()//class ComputeAllFaceDescriptorsTask\n      console.log(results)\n      this.drawFaceRecognitionResults(results)\n    },\n\n    drawFaceRecognitionResults(results) {\n      const canvas = $('#overlay').get(0)\n      const inputImgEl = $('#inputImg').get(0)\n      console.log(\"1111\")\n      console.log(canvas)\n      faceapi.matchDimensions(canvas, inputImgEl)\n      // resize detection and landmarks in case displayed image is smaller than\n      // original size\n      const resizedResults = faceapi.resizeResults(results, inputImgEl)\n\n      //\n      resizedResults.forEach(({ detection, descriptor }) => {\n        const label = this.faceMatcher.findBestMatch(descriptor).toString()//找到最distance最小的对应的label\n        const options = { label }\n        const drawBox = new faceapi.draw.DrawBox(detection.box, options)\n        drawBox.draw(canvas)\n      })\n    },\n    // 运行对比\n    async run() {\n      console.log(\"对比识别\");\n      // 图片一\n      const input1 = await faceapi.fetchImage(TS1);\n      this.descriptors[`desc1`] = await faceapi.computeFaceDescriptor(input1);\n      // 图片二\n      const input2 = await faceapi.fetchImage(TS2);\n      this.descriptors[`desc2`] = await faceapi.computeFaceDescriptor(input2);\n      // 图片相识度\n      const distance = faceapi.round(\n        faceapi.euclideanDistance(\n          this.descriptors.desc1,\n          this.descriptors.desc2\n        )\n      );\n      // 判断\n      console.log(\"值越小越相似:\", distance);\n      if (distance > this.threshold) {\n        console.log(distance, \"相似度<0.6 不比配\");\n      }\n      this.faceMatcher = await bbt.createBbtFaceMatcher(1)\n      this.updateResults()\n    }\n  }\n};\n",{"version":3,"sources":["FaceComparison.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FaceComparison.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"FaceComparison\" >\n    <br>\n    <!-- <img id=\"face1\" src=\"https://dwz.cn/kXUrwcGG\">\n    <img id=\"face2\" src=\"https://dwz.cn/Fi5mUbYK\">-->\n    <div style=\"position: relative\" class=\"margin\">\n      <img class=\"inputImg\" id=\"inputImg\" src=\"\" style=\"max-width: 800px;\" />\n      <canvas class=\"overlay\" id=\"overlay\" style=\"max-width: 800px;\"/>\n    </div>\n     <!-- face_detector_selection_control -->\n      <div id=\"face_detector_selection_control\" class=\"row input-field\" style=\"margin-right: 20px;\">\n        <select id=\"selectFaceDetector\">\n          <option value=\"ssd_mobilenetv1\">SSD Mobilenet V1</option>\n          <option value=\"tiny_face_detector\">Tiny Face Detector</option>\n          <option value=\"mtcnn\">MTCNN</option>\n        </select>\n        <label>Select Face Detector</label>\n      </div>\n      <!-- face_detector_selection_control -->\n\n    <!-- image_selection_control -->\n      <div id=\"image_selection_control\"></div>\n        <div id=\"selectList\"></div>\n        <div class=\"row\">\n          <label for=\"imgUrlInput\">Get image from URL:</label>\n          <input id=\"imgUrlInput\" type=\"text\" class=\"bold\">\n        </div>\n        <button\n          class=\"waves-effect waves-light btn\"\n          onclick=\"loadImageFromUrl()\"\n        >\n          Ok\n        </button>\n      <div id=\"image_selection_control\"></div>\n      <!-- image_selection_control -->\n\n      <!-- ssd_mobilenetv1_controls -->\n    <span id=\"ssd_mobilenetv1_controls\">\n      <div class=\"row side-by-side\">\n        <div class=\"row\">\n          <label for=\"minConfidence\">Min Confidence:</label>\n          <input disabled value=\"0.5\" id=\"minConfidence\" type=\"text\" class=\"bold\">\n        </div>\n        <button\n          class=\"waves-effect waves-light btn\"\n          onclick=\"onDecreaseMinConfidence()\"\n        >\n          <i class=\"material-icons left\">-</i>\n        </button>\n        <button\n          class=\"waves-effect waves-light btn\"\n          onclick=\"onIncreaseMinConfidence()\"\n        >\n          <i class=\"material-icons left\">+</i>\n        </button>\n      </div>\n    </span>\n    <!-- ssd_mobilenetv1_controls -->\n  </div>\n</template>\n\n<style> \n.inputImg{position:absolute; left:80px;  z-index: 0; width:400px; height:400px}\n.overlay{position:absolute; left:80px;  z-index: 1; width:400px; height:400px}\n.div-relative{position:relative; color:#000; border:1px solid #000; width:500px; height:400px} \n.div-a{ position:absolute; left:30px; top:30px; background:#F00; width:200px; height:100px} \n/* css注释说明： 背景为红色 */ \n.div-b{ position:absolute; left:50px; top:60px; background:#FF0; width:400px; height:200px} \n/* 背景为黄色 */ \n.div-c{ position:absolute; left:80px; top:80px; background:#00F; width:300px; height:300px} \n/* DIV背景颜色为蓝色 */ \n</style>\n\n<script>\nimport * as faceapi from \"face-api.js\";\nimport * as tf from \"@tensorflow/tfjs\"\nimport * as bbt from \"../utils/bbt.js\"\nimport * as imageSelectionControls from \"../utils/imageSelectionControls\"\nimport * as faceDetectionControls from \"../utils/faceDetectionControls\"\nimport * as commons from \"../utils/commons\"\nimport * as faceComparison from \"../utils/faceComparison\"\nimport * as cnntfjs from \"../utils/cnntfjs\"\nimport * as mtcnnLoad from \"../utils/mtcnnLoad\"\nimport TS1 from \"../assets/images/bernadette/bernadette1.png\"\nimport TS2 from \"../assets/images/howard/howard1.png\"\nimport jsonModel from \"../assets/model/minist-2019_11_19 上午9_57_57.json\"\n\nexport default {\n  name: \"FaceComparison\",\n  data() {\n    return {\n      // 差值\n      threshold: 0.6,\n      descriptors: {\n        desc1: null,\n        desc2: null\n      },\n      faceMatcher: null\n    };\n  },\n  mounted() {\n    // 同步执行避免报错\n    this.init();\n  },\n  methods: {\n    // 初始加载数据模型\n    async init() {\n      await cnntfjs.train()\n      console.log(jsonModel)\n      let model = await mtcnnLoad.loadLayersModel(jsonModel)\n      model.summary()\n      //model.loadWeights(\"https://storage.googleapis.com/tfjs-models/savedmodel/ssd_mobilenet_v1/weights_manifest.json\")\n      model.predict(tf.zeros([1, 224, 224, 3])).print()\n      imageSelectionControls.initImageSelectionControls()\n      faceDetectionControls.initFaceDetectionControls()\n      // await faceapi.loadFaceDetectionModel(\"/models\")\n      // await faceapi.loadFaceLandmarkModel(\"/models\")\n      // await faceapi.loadFaceRecognitionModel(\"/models\")\n      await faceDetectionControls.changeFaceDetector('ssd_mobilenetv1')\n      await faceapi.loadFaceRecognitionModel(\"/models\")\n      await faceapi.loadFaceLandmarkModel(\"/models\")\n      await this.run()\n    },\n    async updateResults() {\n      if (!faceDetectionControls.isFaceDetectionModelLoaded()) {\n        console.log(\"222\")\n        return\n      }\n\n      const inputImgEl = $('#inputImg').get(0)\n      console.log(inputImgEl)\n      const options = faceDetectionControls.getFaceDetectorOptions()\n      \n      //提取所有面孔并计算结果\n      const results = await faceapi\n        .detectAllFaces(inputImgEl, options)//class DetectAllFacesTask\n        .withFaceLandmarks()//class DetectAllFaceLandmarksTask\n        .withFaceDescriptors()//class ComputeAllFaceDescriptorsTask\n      console.log(results)\n      this.drawFaceRecognitionResults(results)\n    },\n\n    drawFaceRecognitionResults(results) {\n      const canvas = $('#overlay').get(0)\n      const inputImgEl = $('#inputImg').get(0)\n      console.log(\"1111\")\n      console.log(canvas)\n      faceapi.matchDimensions(canvas, inputImgEl)\n      // resize detection and landmarks in case displayed image is smaller than\n      // original size\n      const resizedResults = faceapi.resizeResults(results, inputImgEl)\n\n      //\n      resizedResults.forEach(({ detection, descriptor }) => {\n        const label = this.faceMatcher.findBestMatch(descriptor).toString()//找到最distance最小的对应的label\n        const options = { label }\n        const drawBox = new faceapi.draw.DrawBox(detection.box, options)\n        drawBox.draw(canvas)\n      })\n    },\n    // 运行对比\n    async run() {\n      console.log(\"对比识别\");\n      // 图片一\n      const input1 = await faceapi.fetchImage(TS1);\n      this.descriptors[`desc1`] = await faceapi.computeFaceDescriptor(input1);\n      // 图片二\n      const input2 = await faceapi.fetchImage(TS2);\n      this.descriptors[`desc2`] = await faceapi.computeFaceDescriptor(input2);\n      // 图片相识度\n      const distance = faceapi.round(\n        faceapi.euclideanDistance(\n          this.descriptors.desc1,\n          this.descriptors.desc2\n        )\n      );\n      // 判断\n      console.log(\"值越小越相似:\", distance);\n      if (distance > this.threshold) {\n        console.log(distance, \"相似度<0.6 不比配\");\n      }\n      this.faceMatcher = await bbt.createBbtFaceMatcher(1)\n      this.updateResults()\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n</style>\n"]}]}